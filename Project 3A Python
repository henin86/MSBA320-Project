Project 3A Python
MSBA320
Ping Yang
#Importing libraries
import numpy as np
%matplotlib inline
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import statsmodels as sms
import statsmodels.robust
import math
from sklearn import linear_model, datasets
!pip install ggplot
Requirement already satisfied: ggplot in c:\users\grace surface\anaconda3\lib\site-packages (0.11.5)
Requirement already satisfied: pandas in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (1.0.1)
Requirement already satisfied: brewer2mpl in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (1.4.1)
Requirement already satisfied: patsy>=0.4 in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (0.5.1)
Requirement already satisfied: numpy in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (1.18.1)
Requirement already satisfied: six in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (1.14.0)
Requirement already satisfied: cycler in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (0.10.0)
Requirement already satisfied: statsmodels in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (0.11.0)
Requirement already satisfied: matplotlib in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (3.1.3)
Requirement already satisfied: scipy in c:\users\grace surface\anaconda3\lib\site-packages (from ggplot) (1.4.1)
Requirement already satisfied: pytz>=2017.2 in c:\users\grace surface\anaconda3\lib\site-packages (from pandas->ggplot) (2019.3)
Requirement already satisfied: python-dateutil>=2.6.1 in c:\users\grace surface\anaconda3\lib\site-packages (from pandas->ggplot) (2.8.1)
Requirement already satisfied: kiwisolver>=1.0.1 in c:\users\grace surface\anaconda3\lib\site-packages (from matplotlib->ggplot) (1.1.0)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in c:\users\grace surface\anaconda3\lib\site-packages (from matplotlib->ggplot) (2.4.6)
Requirement already satisfied: setuptools in c:\users\grace surface\anaconda3\lib\site-packages (from kiwisolver>=1.0.1->matplotlib->ggplot) (45.2.0.post20200210)
#Plotting with Continuous Explanatory Variables: Scatterplots
x = list(range(1,11)) 
print(x)
y = [11,12,9,7,5,8,4,4,5,3]
print(y)
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
[11, 12, 9, 7, 5, 8, 4, 4, 5, 3]
plt.scatter (x,y,marker='+')
plt.xlabel ('Explanatory Variable')
plt.ylabel ('Response Variable')
plt.show()

# Adding lines to a scatterplot
aX = np.asarray(x)
aY = np.asarray(y)

regr = linear_model.LinearRegression()
regr.fit(aX.reshape(-1,1), aY.reshape(-1,1))

v = [2,4,6,8,10]
w = [8,5,6,6,2]
aV = np.asarray(v)
aW = np.asarray(w)

regr2 = linear_model.LinearRegression()
regr2.fit(aV.reshape(-1,1),aW.reshape(-1,1))

plt.scatter(x,y, marker='+')
plt.plot(x,regr.predict(aX.reshape(-1,1)))
plt.plot([0,10],[12,0],'ro-')

plt.plot(x,regr2.predict(aX.reshape(-1,1)),dashes =[5,5])

plt.xlabel('Explanatory Variable')
plt.ylabel('Response Variable')
plt.show()

# Plotting with Categorical Explanatory Variables: Box Plots
sex=["male","female"]
txtdata = pd.read_table ('SilwoodWeather.txt') 
txtdata.head()
upper	lower	rain	month	yr
0	10.8	6.5	12.2	1	1987
1	10.5	4.5	1.3	1	1987
2	7.5	-1.0	0.1	1	1987
3	6.5	-3.3	1.1	1	1987
4	10.0	5.0	3.5	1	1987
#SilwoodWeather.boxplot(column = 'month', by = 'upper')
SilwoodWeather = pd.read_csv("SilwoodWeather.txt", sep = "\t", na_values='.')
print(SilwoodWeather)
      upper  lower  rain  month    yr
0      10.8    6.5  12.2      1  1987
1      10.5    4.5   1.3      1  1987
2       7.5   -1.0   0.1      1  1987
3       6.5   -3.3   1.1      1  1987
4      10.0    5.0   3.5      1  1987
...     ...    ...   ...    ...   ...
6935    5.0   -2.5   0.2     12  2005
6936    2.0   -3.5   0.3     12  2005
6937    1.5   -2.5   0.0     12  2005
6938    3.0   -2.5   3.0     12  2005
6939   10.0    1.3  10.5     12  2005

[6940 rows x 5 columns]
sns.boxplot(x = "month", y = "upper", data = SilwoodWeather)
plt.show()

#Color in Python
import matplotlib.cm as cm

colors = cm.rainbow(np.linspace(0.0, 1.0, 30))

plt.pie([12]*30, colors=colors)
plt.show()

# Color with Graphs
#0 < x < 10 , y2 = 3 + 3.3x − 0.3x^2 

def range_inc(start, stop, step):
 i = start
 while i < stop:
  yield round(i,2)
  i += step

x2 = list(range_inc(0, 10, .1))
print (x2)
[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0, 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10.0]
#y1 = 2 + 3x − 0.25x^2
    
y1 = [0] * 101
i = 0
while i in range(len(x2)):
  y1[i] = round(2 + 3 * x2[i] - 0.25 * math.pow(x2[i],2), 4)
  i += 1
print (y1)
[2.0, 2.2975, 2.59, 2.8775, 3.16, 3.4375, 3.71, 3.9775, 4.24, 4.4975, 4.75, 4.9975, 5.24, 5.4775, 5.71, 5.9375, 6.16, 6.3775, 6.59, 6.7975, 7.0, 7.1975, 7.39, 7.5775, 7.76, 7.9375, 8.11, 8.2775, 8.44, 8.5975, 8.75, 8.8975, 9.04, 9.1775, 9.31, 9.4375, 9.56, 9.6775, 9.79, 9.8975, 10.0, 10.0975, 10.19, 10.2775, 10.36, 10.4375, 10.51, 10.5775, 10.64, 10.6975, 10.75, 10.7975, 10.84, 10.8775, 10.91, 10.9375, 10.96, 10.9775, 10.99, 10.9975, 11.0, 10.9975, 10.99, 10.9775, 10.96, 10.9375, 10.91, 10.8775, 10.84, 10.7975, 10.75, 10.6975, 10.64, 10.5775, 10.51, 10.4375, 10.36, 10.2775, 10.19, 10.0975, 10.0, 9.8975, 9.79, 9.6775, 9.56, 9.4375, 9.31, 9.1775, 9.04, 8.8975, 8.75, 8.5975, 8.44, 8.2775, 8.11, 7.9375, 7.76, 7.5775, 7.39, 7.1975, 7.0]
y2 = [0] * 101
i = 0
while i in range(len(x2)):
 y2[i] = round(3 + 3.3 * x2[i] - 0.3 * math.pow(x2[i],2), 4)
 i += 1
print (y2)
[3.0, 3.327, 3.648, 3.963, 4.272, 4.575, 4.872, 5.163, 5.448, 5.727, 6.0, 6.267, 6.528, 6.783, 7.032, 7.275, 7.512, 7.743, 7.968, 8.187, 8.4, 8.607, 8.808, 9.003, 9.192, 9.375, 9.552, 9.723, 9.888, 10.047, 10.2, 10.347, 10.488, 10.623, 10.752, 10.875, 10.992, 11.103, 11.208, 11.307, 11.4, 11.487, 11.568, 11.643, 11.712, 11.775, 11.832, 11.883, 11.928, 11.967, 12.0, 12.027, 12.048, 12.063, 12.072, 12.075, 12.072, 12.063, 12.048, 12.027, 12.0, 11.967, 11.928, 11.883, 11.832, 11.775, 11.712, 11.643, 11.568, 11.487, 11.4, 11.307, 11.208, 11.103, 10.992, 10.875, 10.752, 10.623, 10.488, 10.347, 10.2, 10.047, 9.888, 9.723, 9.552, 9.375, 9.192, 9.003, 8.808, 8.607, 8.4, 8.187, 7.968, 7.743, 7.512, 7.275, 7.032, 6.783, 6.528, 6.267, 6.0]
plt.plot(x2, y1, 'r', lw=2)
plt.plot(x2, y2, 'b', lw=2)
plt.show()

#Coloured scatterplots
jantemp = pd.read_csv("jantemp.txt", sep = "\t", na_values='.', header=0)
print(jantemp)
    tmax  tmin  day
0   10.8   6.5    1
1   10.5   4.5    2
2    7.5  -1.0    3
3    6.5  -3.3    4
4   10.0   5.0    5
5    8.0   3.0    6
6    5.8  -3.3    7
7    2.8  -5.5    8
8   -0.8  -4.8    9
9    1.5  -1.0   10
10   1.5  -7.5   11
11  -3.5 -11.5   12
12  -6.8 -11.3   13
13  -4.3  -7.5   14
14  -2.0  -5.5   15
15   0.8  -2.5   16
16   1.0  -2.0   17
17  -2.0  -3.0   18
18  -1.0  -3.8   19
19   0.0  -3.8   20
20   2.8  -0.3   21
21   5.5   2.3   22
22   6.8   4.8   23
23   6.3   4.0   24
24   5.5   3.3   25
25   4.0   2.0   26
26   5.8   1.5   27
27   3.5  -1.8   28
28   5.5  -5.0   29
29   4.5  -4.8   30
30   1.8  -9.8   31
print(jantemp['tmax'].max())
print(jantemp['tmin'].min())
10.8
-11.5
for index, row in jantemp.iterrows():
    plt.plot(row['day'],row['tmax'],'ro')
    plt.plot(row['day'],row['tmin'],'go')
    plt.plot((row['day'],row['day']),(row['tmin'],row['tmax']),'b-')
    
plt.xlabel("Day")
plt.ylabel("Temperature")
plt.show()

#Colour with histograms
mu, sigma = 0, 0.1 # mean and standard deviation
s = np.random.normal(mu, sigma, 1000)
count, bins, ignored = plt.hist(s, 30, edgecolor='black', color='lavender')
plt.xlabel("x")
plt.ylabel("Frequency")
plt.show()

# Colour with pie chart
names = 'Ragwort', 'Thistle', 'Willowherb', 'Willowherb', 'Orchid', 'Knapweed'
sizes = [0.12, 0.3, 0.26, 0.16, 0.04, 0.12]
colors = ['purple', 'violet', 'green', 'cornsilk', 'cyan', 'white' ]
plt.pie(sizes, labels =names, colors =colors, 
        autopct='%1.1f%%',shadow=True, startangle =140)

plt.axis('equal')
plt.show()
